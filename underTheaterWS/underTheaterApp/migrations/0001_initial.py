# -*- coding: utf-8 -*-
# Generated by Django 1.10 on 2016-10-05 23:44
from __future__ import unicode_literals

from django.db import migrations, models
import django.db.models.deletion
import underTheaterApp.validators


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('address', '0001_initial'),
        ('contenttypes', '0002_remove_content_type_name'),
    ]

    operations = [
        migrations.CreateModel(
            name='Actor',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='Contact',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('number_phone', models.IntegerField(verbose_name='Numero de telefono')),
                ('facebook', models.CharField(blank=True, max_length=128, verbose_name='usuario en Facebook')),
                ('share_address', models.BooleanField(default=True, help_text='Compartir la direccion', verbose_name='Compartir direccion')),
            ],
        ),
        migrations.CreateModel(
            name='DateTimeFunction',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('hour', models.CharField(max_length=300)),
                ('until', models.DateField()),
                ('since', models.DateField()),
                ('periodic_date', models.CharField(blank=True, max_length=200, null=True, validators=[underTheaterApp.validators.periodic_date_validator])),
            ],
        ),
        migrations.CreateModel(
            name='DayFunction',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('topic', models.CharField(max_length=30)),
                ('datetime_function', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='underTheaterApp.DateTimeFunction', verbose_name='dia y horario de la funcion')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='PlayTheater',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('topic', models.CharField(max_length=30)),
                ('play_name', models.CharField(max_length=200)),
                ('synopsis', models.TextField(max_length=500, verbose_name='Sinopsis de la obra')),
                ('picture', models.FileField(upload_to='static/playImages')),
                ('actors', models.ManyToManyField(to='underTheaterApp.Actor', verbose_name='actors')),
                ('polymorphic_ctype', models.ForeignKey(editable=False, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='polymorphic_undertheaterapp.playtheater_set+', to='contenttypes.ContentType')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='TheaterRoom',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('capacity', models.IntegerField(verbose_name='cantidad de asientos libres')),
                ('room_name', models.CharField(max_length=200)),
            ],
        ),
        migrations.CreateModel(
            name='Ticket',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('ticket_name', models.CharField(max_length=200)),
                ('price', models.CharField(max_length=200)),
            ],
        ),
        migrations.CreateModel(
            name='Theater',
            fields=[
                ('name', models.CharField(max_length=200, unique=True)),
                ('review', models.TextField(max_length=500, verbose_name='rese\xf1a del teatro')),
                ('contact', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, primary_key=True, related_name='theater_contact', serialize=False, to='underTheaterApp.Contact', verbose_name='contacto')),
            ],
        ),
        migrations.AddField(
            model_name='dayfunction',
            name='play_theater',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='underTheaterApp.PlayTheater', verbose_name='obra'),
        ),
        migrations.AddField(
            model_name='dayfunction',
            name='polymorphic_ctype',
            field=models.ForeignKey(editable=False, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='polymorphic_undertheaterapp.dayfunction_set+', to='contenttypes.ContentType'),
        ),
        migrations.AddField(
            model_name='dayfunction',
            name='room_theater',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='day_function_room', to='underTheaterApp.TheaterRoom', verbose_name='sala de la obra'),
        ),
        migrations.AddField(
            model_name='contact',
            name='address',
            field=models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='address_contact', to='address.Address', verbose_name='address'),
        ),
        migrations.AddField(
            model_name='theaterroom',
            name='theater',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='theater_room', to='underTheaterApp.Theater', verbose_name='theater'),
        ),
        migrations.AddField(
            model_name='dayfunction',
            name='theater',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='day_function_theater', to='underTheaterApp.Theater', verbose_name='teatro'),
        ),
    ]
